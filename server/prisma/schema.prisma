generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  ADMIN
  USER
}

enum Status {
  INPROGRESS
  RESOLVED
  UNASSIGNED
}

enum Category {
  FEATURE
  BUGFIX
}

model User {
  id             String         @id @default(uuid())
  name           String
  email          String         @unique
  hashedPassword String
  role           Role           @default(USER)
  assigned       AssignedUser[]
  comment        Comment[]
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  tickets     Ticket[]
}

model Ticket {
  id           String         @id @default(cuid())
  title        String
  description  String
  project      Project        @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId    String
  status       Status         @default(UNASSIGNED)
  assignedUser AssignedUser[]
  comment      Comment[]
  category     Category       @default(FEATURE)

  @@index([projectId])
}

model AssignedUser {
  id       String @id @default(cuid())
  userId   String
  ticketId String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  ticket   Ticket @relation(fields: [ticketId], references: [id], onDelete: Cascade)

  @@unique([userId, ticketId])
  @@index([ticketId])
}

model Comment {
  id          String   @id @default(cuid())
  content     String
  createdAt   DateTime @default(now())
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String
  ticket      Ticket   @relation(fields: [ticketId], references: [id], onDelete: Cascade)
  ticketId    String
  upvoteCount Int      @default(0)

  @@index([ticketId])
  @@index([authorId])
}
